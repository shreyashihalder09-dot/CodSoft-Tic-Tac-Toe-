<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe AI</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
      background: #f0f0f0;
    }
    h1 {
      color: #333;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
    }
    .cell {
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2em;
      background: white;
      cursor: pointer;
      border: 2px solid #333;
    }
    .cell.taken {
      cursor: not-allowed;
    }
    #status {
      margin-top: 15px;
      font-size: 1.2em;
    }
    button {
      margin-top: 10px;
      padding: 8px 16px;
      font-size: 1em;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>Tic Tac Toe with AI</h1>
  <div class="board" id="board"></div>
  <div id="status">Your turn!</div>
  <button onclick="resetGame()">Restart Game</button>

  <script>
    const boardEl = document.getElementById("board");
    const statusEl = document.getElementById("status");
    let board = ["", "", "", "", "", "", "", "", ""];
    let gameOver = false;

    function renderBoard() {
      boardEl.innerHTML = "";
      board.forEach((cell, i) => {
        const cellEl = document.createElement("div");
        cellEl.classList.add("cell");
        if (cell) cellEl.classList.add("taken");
        cellEl.textContent = cell;
        cellEl.addEventListener("click", () => playerMove(i));
        boardEl.appendChild(cellEl);
      });
    }

    function playerMove(index) {
      if (board[index] || gameOver) return;
      board[index] = "X";
      renderBoard();
      if (checkWinner(board, "X")) {
        statusEl.textContent = "You win! üéâ";
        gameOver = true;
        return;
      }
      if (isDraw()) {
        statusEl.textContent = "It's a draw! ü§ù";
        gameOver = true;
        return;
      }
      statusEl.textContent = "AI's turn...";
      setTimeout(aiMove, 500);
    }

    function aiMove() {
      let bestScore = -Infinity;
      let move;
      for (let i = 0; i < 9; i++) {
        if (board[i] === "") {
          board[i] = "O";
          let score = minimax(board, 0, false);
          board[i] = "";
          if (score > bestScore) {
            bestScore = score;
            move = i;
          }
        }
      }
      board[move] = "O";
      renderBoard();
      if (checkWinner(board, "O")) {
        statusEl.textContent = "AI wins! ü§ñ";
        gameOver = true;
        return;
      }
      if (isDraw()) {
        statusEl.textContent = "It's a draw! ü§ù";
        gameOver = true;
        return;
      }
      statusEl.textContent = "Your turn!";
    }

    function minimax(newBoard, depth, isMaximizing) {
      if (checkWinner(newBoard, "O")) return 1;
      if (checkWinner(newBoard, "X")) return -1;
      if (isDraw()) return 0;

      if (isMaximizing) {
        let bestScore = -Infinity;
        for (let i = 0; i < 9; i++) {
          if (newBoard[i] === "") {
            newBoard[i] = "O";
            let score = minimax(newBoard, depth + 1, false);
            newBoard[i] = "";
            bestScore = Math.max(score, bestScore);
          }
        }
        return bestScore;
      } else {
        let bestScore = Infinity;
        for (let i = 0; i < 9; i++) {
          if (newBoard[i] === "") {
            newBoard[i] = "X";
            let score = minimax(newBoard, depth + 1, true);
            newBoard[i] = "";
            bestScore = Math.min(score, bestScore);
          }
        }
        return bestScore;
      }
    }

    function checkWinner(b, player) {
      const winPatterns = [
        [0,1,2],[3,4,5],[6,7,8],
        [0,3,6],[1,4,7],[2,5,8],
        [0,4,8],[2,4,6]
      ];
      return winPatterns.some(pattern => pattern.every(i => b[i] === player));
    }

    function isDraw() {
      return board.every(cell => cell !== "");
    }

    function resetGame() {
      board = ["", "", "", "", "", "", "", "", ""];
      gameOver = false;
      statusEl.textContent = "Your turn!";
      renderBoard();
    }

    renderBoard();
  </script>
</body>
</html>
